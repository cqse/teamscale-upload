<?xml version="1.0" encoding="UTF-8"?>
<project xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
		 xmlns="http://maven.apache.org/POM/4.0.0"
		 xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>com.teamscale.upload</groupId>
	<artifactId>teamscale-upload</artifactId>
	<!-- Default version, the build will replace this with the actual version derived from git tags. -->
	<version>1.0-SNAPSHOT</version>

	<name>Teamscale Upload</name>
	<description>Command-line tool to upload external analysis results (coverage, findings, ...) to
		Teamscale.
	</description>
	<organization>
		<name>CQSE GmbH</name>
		<url>https://www.cqse.eu/</url>
	</organization>
	<licenses>
		<license>
			<name>Apache License, Version 2.0</name>
			<url>https://www.apache.org/licenses/LICENSE-2.0.txt</url>
		</license>
	</licenses>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<maven.compiler.source>17</maven.compiler.source>
		<maven.compiler.target>17</maven.compiler.target>
		<graalvm.version>21.2.0</graalvm.version>
		<junit.version>5.10.0</junit.version>
		<!-- ${git.build.version} is the property that the git-commit-id-maven-plugin plugin will generate -->
		<ToolVersion>${git.closest.tag.name}</ToolVersion>
	</properties>

	<repositories>
		<repository>
			<id>intellij-dependencies</id>
			<name>Intellij Dependencies</name>
			<url>https://packages.jetbrains.team/maven/p/ij/intellij-dependencies/</url>
		</repository>
	</repositories>

	<dependencies>
		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-exec</artifactId>
			<version>1.3</version>
		</dependency>
		<dependency>
			<groupId>commons-io</groupId>
			<artifactId>commons-io</artifactId>
			<version>2.11.0</version>
		</dependency>
		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-compress</artifactId>
			<version>1.21</version>
		</dependency>
		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-lang3</artifactId>
			<version>3.12.0</version>
		</dependency>
		<dependency>
			<groupId>com.google.code.gson</groupId>
			<artifactId>gson</artifactId>
			<version>2.8.9</version>
		</dependency>
		<dependency>
			<groupId>com.google.guava</groupId>
			<artifactId>guava</artifactId>
			<version>32.1.2-jre</version>
		</dependency>
		<dependency>
			<groupId>com.squareup.okhttp3</groupId>
			<artifactId>okhttp</artifactId>
			<version>4.9.2</version>
		</dependency>
		<dependency>
			<groupId>net.sourceforge.argparse4j</groupId>
			<artifactId>argparse4j</artifactId>
			<version>0.9.0</version>
		</dependency>
		<dependency>
			<groupId>org.jetbrains.nativecerts</groupId>
			<artifactId>jvm-native-trusted-roots</artifactId>
			<version>1.0.19</version>
		</dependency>
		<dependency>
			<groupId>org.junit.jupiter</groupId>
			<artifactId>junit-jupiter-api</artifactId>
			<version>${junit.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.junit.jupiter</groupId>
			<artifactId>junit-jupiter-params</artifactId>
			<version>${junit.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>javax.servlet-api</artifactId>
			<version>4.0.1</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.assertj</groupId>
			<artifactId>assertj-core</artifactId>
			<version>3.21.0</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>com.sparkjava</groupId>
			<artifactId>spark-core</artifactId>
			<version>2.9.4</version>
			<scope>test</scope>
		</dependency>
	</dependencies>

	<build>
		<pluginManagement>
			<plugins>
				<plugin>
					<groupId>org.graalvm.nativeimage</groupId>
					<artifactId>native-image-maven-plugin</artifactId>
					<version>${graalvm.version}</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-toolchains-plugin</artifactId>
					<version>3.0.0</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-clean-plugin</artifactId>
					<version>3.1.0</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-compiler-plugin</artifactId>
					<version>3.8.1</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-failsafe-plugin</artifactId>
					<version>3.0.0-M5</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-surefire-plugin</artifactId>
					<version>3.0.0-M5</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-jar-plugin</artifactId>
					<version>3.2.0</version>
				</plugin>
			</plugins>
		</pluginManagement>
		<plugins>
			<plugin>
				<!-- derive version number from git tag -->
				<groupId>io.github.git-commit-id</groupId>
				<artifactId>git-commit-id-maven-plugin</artifactId>
				<version>7.0.0</version>
				<executions>
					<execution>
						<id>get-the-git-infos</id>
						<goals>
							<goal>revision</goal>
						</goals>
						<phase>initialize</phase>
					</execution>
				</executions>
				<configuration>
					<!-- This enables the 'git.closest.tag.name' property generation -->
					<injectAllReactorProjects>true</injectAllReactorProjects>
					<!-- We are providing a detailed configuration for 'git describe'. -->
					<gitDescribe>
						<!-- Enables 'git describe' -->
						<skip>false</skip>
						<!-- If no tag is found, fall back to the commit hash. This ensures a value is always produced. -->
						<always>true</always>
						<!-- Append this suffix if the working directory has uncommitted changes -->
						<dirty>-dirty</dirty>
						<!-- This is essential to find lightweight tags (git tag my-tag) -->
						<tags>true</tags>
					</gitDescribe>
				</configuration>
			</plugin>
			<!--
				Add the generated-sources directory to the compile path
				This tells the Java compiler to look for source files in the
				directory where we just generated our Version.java file.
			-->
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>build-helper-maven-plugin</artifactId>
				<version>3.5.0</version>
				<executions>
					<execution>
						<id>add-generated-sources</id>
						<phase>initialize</phase>
						<goals>
							<goal>add-source</goal>
						</goals>
						<configuration>
							<sources>
								<source>${project.build.directory}/generated-sources/java</source>
							</sources>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-resources-plugin</artifactId>
				<version>3.3.1</version>
				<executions>
					<execution>
						<id>generate-version-java-file</id>
						<!-- Run this during the 'generate-sources' phase -->
						<phase>generate-sources</phase>
						<goals>
							<goal>copy-resources</goal>
						</goals>
						<configuration>
							<outputDirectory>${project.build.directory}/generated-sources/java</outputDirectory>
							<resources>
								<resource>
									<directory>src/main/templates/java</directory>
									<filtering>true</filtering>
									<includes>
										<include>**/ToolVersion.java</include>
									</includes>
								</resource>
							</resources>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.graalvm.nativeimage</groupId>
				<artifactId>native-image-maven-plugin</artifactId>
				<configuration>
					<mainClass>com.teamscale.upload.TeamscaleUpload</mainClass>
					<imageName>${project.artifactId}</imageName>
					<buildArgs>
						-H:+AddAllCharsets
						--no-fallback
						--enable-http
						--enable-https
					</buildArgs>
				</configuration>
				<executions>
					<execution>
						<id>native-image</id>
						<goals>
							<goal>native-image</goal>
						</goals>
						<phase>package</phase>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>3.2.2</version>
				<configuration>
					<excludes>
						<exclude>**/JLinkIntegrationTest.java</exclude>
					</excludes>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-failsafe-plugin</artifactId>
				<executions>
					<execution>
						<id>integration-test</id>
						<goals>
							<goal>integration-test</goal>
							<goal>verify</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>
</project>
